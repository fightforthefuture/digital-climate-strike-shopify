version: "3.7"

volumes:
  postgres_data:

networks:
  backend:

x-common-variables: &common-variables
  WEBPACKER_DEV_SERVER_HOST: 0.0.0.0
  NODE_ENV: development
  RAILS_ENV: development
  RACK_ENV: development
  SHOPIFY_API_KEY: ${GCS_SHOPIFY_API_KEY:-FAKE_API_KEY}
  SHOPIFY_API_SECRET: ${GCS_SHOPIFY_API_SECRET:-FAKE_SECRET}
  app_host: ${APP_HOST:-digital-climate-strike-shopify-app.ngrok.io}
  DCS_AWS_ACCESS_KEY_ID: ${DCS_AWS_ACCESS_KEY_ID:-FAKE-SECRET}
  DCS_AWS_SECRET_ACCESS_KEY: ${DCS_AWS_SECRET_ACCESS_KEY:-FAKE-SECRET}
  DATABASE_NAME: dcs_development
  DATABASE_USERNAME: postgres
  DATABASE_HOST: db
  DATABASE_PORT: 5432
  DATABASE_PASSWORD: 12341234

services:
  db:
    image: postgres:9.6.2
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      LC_ALL: C.UTF-8
      POSTGRES_PASSWORD: 12341234
    networks:
      - backend

  app: &app
    image: fightforthefuture/shopify-global-climate-strikes-app:development
    build:
      target: development
      context: .
      dockerfile: Dockerfile
    working_dir: /usr/src
    volumes:
      - .:/usr/src
    stdin_open: true
    tty: true

  backend:
    <<: *app
    command: bundle exec foreman start -f Procfile.dev
    entrypoint: /usr/src/entrypoint
    ports:
      - 80:3000
      - 443:3000
      - 3035:3035
    environment:
      <<: *common-variables
    depends_on:
      - db
    networks:
      - backend

  test:
    <<: *app
    image: fightforthefuture/shopify-global-climate-strikes-app:test
    build:
      target: testing
      context: .
      dockerfile: Dockerfile
    command: bundle exec rspec
    environment:
      <<: *common-variables
      DATABASE_NAME: dcs_test
      RAILS_ENV: test
      RACK_ENV: test
    depends_on:
      - chrome
      - db
    networks:
      - backend

  chrome:
    image: selenium/standalone-chrome
    networks:
      - backend
